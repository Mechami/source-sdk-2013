cmake_minimum_required(VERSION 3.26 FATAL_ERROR)
project("Server (${GAMENAME})" DESCRIPTION "Server binary" LANGUAGES CXX)
include(source_base)
include(source_dll_base)

add_library(server MODULE)
target_base_sources(server)
#target_precompile_headers(server PRIVATE ${SP_SOURCE_DIR}/game/server/cbase.h)
set_target_properties(server PROPERTIES PREFIX "")
install(TARGETS server DESTINATION bin)
target_compile_definitions(server PRIVATE
	$<$<BOOL:${UNIX}>:SWDS>
	#	$<$<BOOL:${WIN32}>:fopen=dont_use_fopen>
	#	$<$<BOOL:${WIN32}>:PROTECTED_THINGS_ENABLE>
	$<$<BOOL:${WIN32}>:VC_EXTRALEAN>
	$<$<BOOL:${WIN32}>:WIN_32_LEAN_AND_MEAN>
	GAME_DLL
	HL2_DLL
	NO_STEAM
	#	_snprintf=use_Q_snprintf_instead
	#	sprintf=use_Q_snprintf_instead_of_sprintf
	#	strncpy=use_Q_strncpy_instead
	USES_SAVERESTORE
	VECTOR
	VERSION_SAFE_STEAM_API_INTERFACES
)
target_include_directories(server SYSTEM BEFORE PRIVATE
	${SP_SOURCE_DIR}/public/tier0
	${SP_SOURCE_DIR}/public/tier1
	${SP_SOURCE_DIR}/public
	${SP_SOURCE_DIR}/common
)
target_include_directories(server AFTER PRIVATE
	${PROJECT_SOURCE_DIR}/
	${PROJECT_SOURCE_DIR}/episodic
	${PROJECT_SOURCE_DIR}/hl2
	${PROJECT_SOURCE_DIR}/hl2mp
	${PROJECT_SOURCE_DIR}/mapbase
	${PROJECT_SOURCE_DIR}/sdk
	${SP_SOURCE_DIR}/game/shared
	${SP_SOURCE_DIR}/game/shared/econ
	${SP_SOURCE_DIR}/game/shared/episodic
	${SP_SOURCE_DIR}/game/shared/hl2
	${SP_SOURCE_DIR}/utils/common
)
target_link_libraries(server PRIVATE
	$<$<BOOL:${WIN32}>:winmm.lib>

	Lib::Choreoobjects
	Lib::DMXLoader
	Lib::Mathlib
	Lib::Particles
	Lib::Tier2
	Lib::Tier3
	Lib::SteamAPI
)
target_sources(server PRIVATE
	$<IF:$<BOOL:${NEW_RESPONSE_SYSTEM}>,${SP_SOURCE_DIR}/game/shared/ai_responsesystem_new.cpp,AI_ResponseSystem.cpp>
	$<IF:$<BOOL:${NEW_RESPONSE_SYSTEM}>,${SP_SOURCE_DIR}/game/shared/ai_criteria_new.cpp,AI_Criteria.cpp>
	$<$<BOOL:${BUILD_REPLAY}>:${SP_SOURCE_DIR}/game/shared/replay_gamestats_shared.cpp>
	$<$<BOOL:${WIN32}>:${SP_SOURCE_DIR}/public/haptics/haptic_utils.cpp>
	$<IF:$<BOOL:${NEW_RESPONSE_SYSTEM}>,ai_speech_new.cpp,ai_speech.cpp>
	${SP_SOURCE_DIR}/common/language.cpp
	${SP_SOURCE_DIR}/common/randoverride.cpp
	${SP_SOURCE_DIR}/game/server/serverbenchmark_base.cpp
	${SP_SOURCE_DIR}/game/server/vote_controller.cpp
	${SP_SOURCE_DIR}/game/shared/EntityParticleTrail_Shared.cpp
	${SP_SOURCE_DIR}/game/shared/GameStats.cpp
	${SP_SOURCE_DIR}/game/shared/ModelSoundsCache.cpp
	${SP_SOURCE_DIR}/game/shared/SceneCache.cpp
	${SP_SOURCE_DIR}/game/shared/SoundEmitterSystem.cpp
	${SP_SOURCE_DIR}/game/shared/Sprite.cpp
	${SP_SOURCE_DIR}/game/shared/SpriteTrail.cpp
	${SP_SOURCE_DIR}/game/shared/achievement_saverestore.cpp
	${SP_SOURCE_DIR}/game/shared/achievementmgr.cpp
	${SP_SOURCE_DIR}/game/shared/achievements_hlx.cpp
	${SP_SOURCE_DIR}/game/shared/activitylist.cpp
	${SP_SOURCE_DIR}/game/shared/ammodef.cpp
	${SP_SOURCE_DIR}/game/shared/animation.cpp
	${SP_SOURCE_DIR}/game/shared/base_playeranimstate.cpp
	${SP_SOURCE_DIR}/game/shared/baseachievement.cpp
	${SP_SOURCE_DIR}/game/shared/basecombatcharacter_shared.cpp
	${SP_SOURCE_DIR}/game/shared/basecombatweapon_shared.cpp
	${SP_SOURCE_DIR}/game/shared/baseentity_shared.cpp
	${SP_SOURCE_DIR}/game/shared/basegrenade_shared.cpp
	${SP_SOURCE_DIR}/game/shared/baseparticleentity.cpp
	${SP_SOURCE_DIR}/game/shared/baseplayer_shared.cpp
	${SP_SOURCE_DIR}/game/shared/baseprojectile.cpp
	${SP_SOURCE_DIR}/game/shared/baseviewmodel_shared.cpp
	${SP_SOURCE_DIR}/game/shared/beam_shared.cpp
	${SP_SOURCE_DIR}/game/shared/collisionproperty.cpp
	${SP_SOURCE_DIR}/game/shared/death_pose.cpp
	${SP_SOURCE_DIR}/game/shared/debugoverlay_shared.cpp
	${SP_SOURCE_DIR}/game/shared/decals.cpp
	${SP_SOURCE_DIR}/game/shared/effect_dispatch_data.cpp
	${SP_SOURCE_DIR}/game/shared/ehandle.cpp
	${SP_SOURCE_DIR}/game/shared/entitylist_base.cpp
	${SP_SOURCE_DIR}/game/shared/env_detail_controller.cpp
	${SP_SOURCE_DIR}/game/shared/env_wind_shared.cpp
	${SP_SOURCE_DIR}/game/shared/eventlist.cpp
	${SP_SOURCE_DIR}/game/shared/func_ladder.cpp
	${SP_SOURCE_DIR}/game/shared/gamemovement.cpp
	${SP_SOURCE_DIR}/game/shared/gamerules.cpp
	${SP_SOURCE_DIR}/game/shared/gamerules_register.cpp
	${SP_SOURCE_DIR}/game/shared/gamestringpool.cpp
	${SP_SOURCE_DIR}/game/shared/gamevars_shared.cpp
	${SP_SOURCE_DIR}/game/shared/hintmessage.cpp
	${SP_SOURCE_DIR}/game/shared/hintsystem.cpp
	${SP_SOURCE_DIR}/game/shared/igamesystem.cpp
	${SP_SOURCE_DIR}/game/shared/mapentities_shared.cpp
	${SP_SOURCE_DIR}/game/shared/movevars_shared.cpp
	${SP_SOURCE_DIR}/game/shared/mp_shareddefs.cpp
	${SP_SOURCE_DIR}/game/shared/multiplay_gamerules.cpp
	${SP_SOURCE_DIR}/game/shared/obstacle_pushaway.cpp
	${SP_SOURCE_DIR}/game/shared/particle_parse.cpp
	${SP_SOURCE_DIR}/game/shared/particlesystemquery.cpp
	${SP_SOURCE_DIR}/game/shared/physics_main_shared.cpp
	${SP_SOURCE_DIR}/game/shared/physics_saverestore.cpp
	${SP_SOURCE_DIR}/game/shared/physics_shared.cpp
	${SP_SOURCE_DIR}/game/shared/point_bonusmaps_accessor.cpp
	${SP_SOURCE_DIR}/game/shared/point_posecontroller.cpp
	${SP_SOURCE_DIR}/game/shared/precache_register.cpp
	${SP_SOURCE_DIR}/game/shared/predictableid.cpp
	${SP_SOURCE_DIR}/game/shared/props_shared.cpp
	${SP_SOURCE_DIR}/game/shared/querycache.cpp
	${SP_SOURCE_DIR}/game/shared/ragdoll_shared.cpp
	${SP_SOURCE_DIR}/game/shared/rope_helpers.cpp
	${SP_SOURCE_DIR}/game/shared/saverestore.cpp
	${SP_SOURCE_DIR}/game/shared/sceneentity_shared.cpp
	${SP_SOURCE_DIR}/game/shared/sequence_Transitioner.cpp
	${SP_SOURCE_DIR}/game/shared/sheetsimulator.cpp
	${SP_SOURCE_DIR}/game/shared/simtimer.cpp
	${SP_SOURCE_DIR}/game/shared/singleplay_gamerules.cpp
	${SP_SOURCE_DIR}/game/shared/soundenvelope.cpp
	${SP_SOURCE_DIR}/game/shared/studio_shared.cpp
	${SP_SOURCE_DIR}/game/shared/takedamageinfo.cpp
	${SP_SOURCE_DIR}/game/shared/teamplay_gamerules.cpp
	${SP_SOURCE_DIR}/game/shared/test_ehandle.cpp
	${SP_SOURCE_DIR}/game/shared/usercmd.cpp
	${SP_SOURCE_DIR}/game/shared/usermessages.cpp
	${SP_SOURCE_DIR}/game/shared/util_shared.cpp
	${SP_SOURCE_DIR}/game/shared/vehicle_viewblend_shared.cpp
	${SP_SOURCE_DIR}/game/shared/voice_gamemgr.cpp
	${SP_SOURCE_DIR}/game/shared/vscript_shared.cpp
	${SP_SOURCE_DIR}/game/shared/weapon_parse.cpp
	${SP_SOURCE_DIR}/game/shared/weapon_proficiency.cpp
	${SP_SOURCE_DIR}/public/ScratchPadUtils.cpp
	${SP_SOURCE_DIR}/public/SoundParametersInternal.cpp
	${SP_SOURCE_DIR}/public/bone_setup.cpp
	${SP_SOURCE_DIR}/public/collisionutils.cpp
	${SP_SOURCE_DIR}/public/dt_send.cpp
	${SP_SOURCE_DIR}/public/dt_utlvector_common.cpp
	${SP_SOURCE_DIR}/public/dt_utlvector_send.cpp
	${SP_SOURCE_DIR}/public/editor_sendcommand.cpp
	${SP_SOURCE_DIR}/public/filesystem_helpers.cpp
	${SP_SOURCE_DIR}/public/haptics/haptic_msgs.cpp
	${SP_SOURCE_DIR}/public/interpolatortypes.cpp
	${SP_SOURCE_DIR}/public/keyframe/keyframe.cpp
	${SP_SOURCE_DIR}/public/map_utils.cpp
	${SP_SOURCE_DIR}/public/networkvar.cpp
	${SP_SOURCE_DIR}/public/registry.cpp
	${SP_SOURCE_DIR}/public/rope_physics.cpp
	${SP_SOURCE_DIR}/public/scratchpad3d.cpp
	${SP_SOURCE_DIR}/public/server_class.cpp
	${SP_SOURCE_DIR}/public/simple_physics.cpp
	${SP_SOURCE_DIR}/public/stringregistry.cpp
	${SP_SOURCE_DIR}/public/studio.cpp
	AI_Interest_Target.cpp
	BaseAnimatingOverlay.cpp
	CRagdollMagnet.cpp
	CommentarySystem.cpp
	EffectsServer.cpp
	EntityDissolve.cpp
	EntityFlame.cpp
	EntityParticleTrail.cpp
	EnvBeam.cpp
	EnvFade.cpp
	EnvHudHint.cpp
	EnvLaser.cpp
	EnvMessage.cpp
	EnvShake.cpp
	EnvSpark.cpp
	EventLog.cpp
	GameStats_BasicStatsFunctions.cpp
	MaterialModifyControl.cpp
	PointAngularVelocitySensor.cpp
	RagdollBoogie.cpp
	ServerNetworkProperty.cpp
	SkyCamera.cpp
	TemplateEntities.cpp
	WaterLODControl.cpp
	ai_activity.cpp
	ai_baseactor.cpp
	ai_basehumanoid.cpp
	ai_basenpc.cpp
	ai_basenpc_flyer.cpp
	ai_basenpc_flyer_new.cpp
	ai_basenpc_movement.cpp
	ai_basenpc_physicsflyer.cpp
	ai_basenpc_schedule.cpp
	ai_basenpc_squad.cpp
	ai_behavior.cpp
	ai_behavior_assault.cpp
	ai_behavior_fear.cpp
	ai_behavior_follow.cpp
	ai_behavior_lead.cpp
	ai_behavior_rappel.cpp
	ai_behavior_standoff.cpp
	ai_blended_movement.cpp
	ai_concommands.cpp
	ai_condition.cpp
	ai_default.cpp
	ai_dynamiclink.cpp
	ai_event.cpp
	ai_goalentity.cpp
	ai_hint.cpp
	ai_hull.cpp
	ai_initutils.cpp
	ai_link.cpp
	ai_localnavigator.cpp
	ai_looktarget.cpp
	ai_memory.cpp
	ai_motor.cpp
	ai_moveprobe.cpp
	ai_moveshoot.cpp
	ai_movesolver.cpp
	ai_namespaces.cpp
	ai_navigator.cpp
	ai_network.cpp
	ai_networkmanager.cpp
	ai_node.cpp
	ai_pathfinder.cpp
	ai_planesolver.cpp
	ai_playerally.cpp
	ai_route.cpp
	ai_saverestore.cpp
	ai_schedule.cpp
	ai_scriptconditions.cpp
	ai_senses.cpp
	ai_sentence.cpp
	ai_speechfilter.cpp
	ai_squad.cpp
	ai_squadslot.cpp
	ai_tacticalservices.cpp
	ai_task.cpp
	ai_trackpather.cpp
	ai_utils.cpp
	ai_waypoint.cpp
	base_transmit_proxy.cpp
	baseanimating.cpp
	basecombatcharacter.cpp
	basecombatweapon.cpp
	baseentity.cpp
	baseflex.cpp
	basemultiplayerplayer.cpp
	basetempentity.cpp
	baseviewmodel.cpp
	bitstring.cpp
	bmodels.cpp
	buttons.cpp
	cbase.cpp
	client.cpp
	colorcorrection.cpp
	colorcorrectionvolume.cpp
	controlentities.cpp
	cplane.cpp
	damagemodifier.cpp
	doors.cpp
	dynamiclight.cpp
	effects.cpp
	entity_tools_server.cpp
	entityblocker.cpp
	entitylist.cpp
	env_debughistory.cpp
	env_effectsscript.cpp
	env_entity_maker.cpp
	env_particlescript.cpp
	env_player_surface_trigger.cpp
	env_projectedtexture.cpp
	env_screenoverlay.cpp
	env_texturetoggle.cpp
	env_tonemap_controller.cpp
	env_zoom.cpp
	envmicrophone.cpp
	event_tempentity_tester.cpp
	explode.cpp
	filters.cpp
	fire.cpp
	fire_smoke.cpp
	fish.cpp
	fogcontroller.cpp
	fourwheelvehiclephysics.cpp
	func_areaportal.cpp
	func_areaportalbase.cpp
	func_areaportalwindow.cpp
	func_break.cpp
	func_breakablesurf.cpp
	func_dust.cpp
	func_ladder_endpoint.cpp
	func_lod.cpp
	func_movelinear.cpp
	func_occluder.cpp
	func_reflective_glass.cpp
	func_smokevolume.cpp
	game.cpp
	game_ui.cpp
	gamedll_replay.cpp
	gamehandle.cpp
	gameinterface.cpp
	gametrace_dll.cpp
	gameweaponmanager.cpp
	genericactor.cpp
	genericmonster.cpp
	gib.cpp
	globals.cpp
	globalstate.cpp
	guntarget.cpp
	h_ai.cpp
	h_export.cpp
	hierarchy.cpp
	hl2/te_gaussexplosion.cpp
	hltvdirector.cpp
	info_camera_link.cpp
	info_overlay_accessor.cpp
	init_factory.cpp
	intermission.cpp
	item_world.cpp
	lightglow.cpp
	lights.cpp
	logic_measure_movement.cpp
	logic_navigation.cpp
	logicauto.cpp
	logicentities.cpp
	logicrelay.cpp
	mapentities.cpp
	maprules.cpp
	message_entity.cpp
	modelentities.cpp
	movehelper_server.cpp
	movement.cpp
	movie_explosion.cpp
	ndebugoverlay.cpp
	npc_vehicledriver.cpp
	particle_fire.cpp
	particle_light.cpp
	particle_smokegrenade.cpp
	particle_system.cpp
	pathcorner.cpp
	pathtrack.cpp
	phys_controller.cpp
	physconstraint.cpp
	physics.cpp
	physics_bone_follower.cpp
	physics_cannister.cpp
	physics_fx.cpp
	physics_impact_damage.cpp
	physics_main.cpp
	physics_npc_solver.cpp
	physics_prop_ragdoll.cpp
	physobj.cpp
	plasma.cpp
	player.cpp
	player_command.cpp
	player_lagcompensation.cpp
	player_pickup.cpp
	player_resource.cpp
	playerinfomanager.cpp
	playerlocaldata.cpp
	plugin_check.cpp
	point_camera.cpp
	point_devshot_camera.cpp
	point_playermoveconstraint.cpp
	point_spotlight.cpp
	point_template.cpp
	pointanglesensor.cpp
	pointhurt.cpp
	pointteleport.cpp
	props.cpp
	ragdoll_manager.cpp
	recipientfilter.cpp
	rope.cpp
	saverestore_gamedll.cpp
	sceneentity.cpp
	scratchpad_gamedll_helpers.cpp
	scripted.cpp
	scriptedtarget.cpp
	sendproxy.cpp
	shadowcontrol.cpp
	slideshow_display.cpp
	smoke_trail.cpp
	smokestack.cpp
	sound.cpp
	soundent.cpp
	soundscape.cpp
	soundscape_system.cpp
	spotlightend.cpp
	sprite_perfmonitor.cpp
	steamjet.cpp
	subs.cpp
	sun.cpp
	tactical_mission.cpp
	tanktrain.cpp
	te.cpp
	te_armorricochet.cpp
	te_basebeam.cpp
	te_beamentpoint.cpp
	te_beaments.cpp
	te_beamfollow.cpp
	te_beamlaser.cpp
	te_beampoints.cpp
	te_beamring.cpp
	te_beamringpoint.cpp
	te_beamspline.cpp
	te_bloodsprite.cpp
	te_bloodstream.cpp
	te_breakmodel.cpp
	te_bspdecal.cpp
	te_bubbles.cpp
	te_bubbletrail.cpp
	te_clientprojectile.cpp
	te_decal.cpp
	te_dynamiclight.cpp
	te_effect_dispatch.cpp
	te_energysplash.cpp
	te_explosion.cpp
	te_fizz.cpp
	te_footprintdecal.cpp
	te_glassshatter.cpp
	te_glowsprite.cpp
	te_impact.cpp
	te_killplayerattachments.cpp
	te_largefunnel.cpp
	te_muzzleflash.cpp
	te_particlesystem.cpp
	te_physicsprop.cpp
	te_playerdecal.cpp
	te_projecteddecal.cpp
	te_showline.cpp
	te_smoke.cpp
	te_sparks.cpp
	te_sprite.cpp
	te_spritespray.cpp
	te_worlddecal.cpp
	team.cpp
	tempmonster.cpp
	tesla.cpp
	test_proxytoggle.cpp
	test_stressentities.cpp
	testfunctions.cpp
	testtraceline.cpp
	textstatsmgr.cpp
	timedeventmgr.cpp
	toolframework_server.cpp
	trains.cpp
	triggers.cpp
	util.cpp
	variant_t.cpp
	vehicle_base.cpp
	vehicle_baseserver.cpp
	vguiscreen.cpp
	vscript_server.cpp
	waterbullet.cpp
	wcedit.cpp
	weight_button.cpp
	world.cpp
)

if (EPISODIC)
	target_compile_definitions(server PRIVATE
		HL2_EPISODIC
	)
	target_sources(server PRIVATE
		$<$<NOT:$<BOOL:${MAPBASE}>>:hl2/weapon_stunstick.cpp> # See server_mapbase.vpc
		${SP_SOURCE_DIR}/game/shared/episodic/achievements_ep1.cpp
		${SP_SOURCE_DIR}/game/shared/episodic/achievements_ep2.cpp
		${SP_SOURCE_DIR}/game/shared/episodic/achievements_epx.cpp
		${SP_SOURCE_DIR}/game/shared/hl2/basehlcombatweapon_shared.cpp
		${SP_SOURCE_DIR}/game/shared/hl2/env_headcrabcanister_shared.cpp
		${SP_SOURCE_DIR}/game/shared/hl2/hl2_gamerules.cpp
		${SP_SOURCE_DIR}/game/shared/hl2/hl2_usermessages.cpp
		${SP_SOURCE_DIR}/game/shared/hl2/hl_gamemovement.cpp
		${SP_SOURCE_DIR}/game/shared/hl2/survival_gamerules.cpp
		${SP_SOURCE_DIR}/game/shared/script_intro_shared.cpp
		${SP_SOURCE_DIR}/game/shared/weapon_parse_default.cpp
		ai_behavior_passenger.cpp
		ai_eventresponse.cpp
		ai_relationship.cpp
		basebludgeonweapon.cpp
		base_gameinterface.cpp
		basegrenade_concussion.cpp
		basegrenade_contact.cpp
		basegrenade_timed.cpp
		episodic/ai_behavior_alyx_injured.cpp
		episodic/ai_behavior_passenger_companion.cpp
		episodic/ai_behavior_passenger_zombie.cpp
		episodic/ep1_gamestats.cpp
		episodic/ep2_gamestats.cpp
		episodic/npc_advisor.cpp
		episodic/npc_combine_cannon.cpp
		episodic/npc_hunter.cpp
		episodic/npc_magnusson.cpp
		episodic/npc_puppet.cpp
		episodic/prop_scalable.cpp
		episodic/vehicle_jeep_episodic.cpp
		episodic/weapon_striderbuster.cpp
		grenadethrown.cpp
		h_cycler.cpp
		hl2/ai_allymanager.cpp
		hl2/ai_behavior_actbusy.cpp
		hl2/ai_behavior_functank.cpp
		hl2/ai_behavior_holster.cpp
		hl2/ai_behavior_operator.cpp
		hl2/ai_behavior_police.cpp
		hl2/ai_goal_police.cpp
		hl2/ai_spotlight.cpp
		hl2/antlion_dust.cpp
		hl2/antlion_maker.cpp
		hl2/ar2_explosion.cpp
		hl2/basehlcombatweapon.cpp
		hl2/cbasehelicopter.cpp
		hl2/cbasespriteprojectile.cpp
		hl2/citadel_effects.cpp
		hl2/combine_mine.cpp
		hl2/env_alyxemp.cpp
		hl2/env_headcrabcanister.cpp
		hl2/env_speaker.cpp
		hl2/env_starfield.cpp
		hl2/func_bulletshield.cpp
		hl2/Func_Monitor.cpp
		hl2/func_recharge.cpp
		hl2/func_tank.cpp
		hl2/grenade_ar2.cpp
		hl2/grenade_beam.cpp
		hl2/grenade_bugbait.cpp
		hl2/grenade_frag.cpp
		hl2/grenade_homer.cpp
		hl2/grenade_pathfollower.cpp
		hl2/grenade_spit.cpp
		hl2/hl2_ai_network.cpp
		hl2/hl2_client.cpp
		hl2/hl2_eventlog.cpp
		hl2/hl2_player.cpp
		hl2/hl2_playerlocaldata.cpp
		hl2/hl2_triggers.cpp
		hl2/hl_playermove.cpp
		hl2/info_darknessmode_lightsource.cpp
		hl2/info_teleporter_countdown.cpp
		hl2/item_ammo.cpp
		hl2/item_battery.cpp
		hl2/item_dynamic_resupply.cpp
		hl2/item_healthkit.cpp
		hl2/item_itemcrate.cpp
		hl2/item_suit.cpp
		hl2/look_door.cpp
		hl2/monster_dummy.cpp
		hl2/npc_alyx_episodic.cpp
		hl2/npc_antlion.cpp
		hl2/npc_antliongrub.cpp
		hl2/npc_antlionguard.cpp
		hl2/npc_apcdriver.cpp
		hl2/npc_attackchopper.cpp
		hl2/npc_barnacle.cpp
		hl2/npc_barney.cpp
		hl2/npc_basescanner.cpp
		hl2/npc_BaseZombie.cpp
		hl2/npc_breen.cpp
		hl2/npc_bullseye.cpp
		hl2/npc_citizen17.cpp
		hl2/npc_combinecamera.cpp
		hl2/npc_combine.cpp
		hl2/npc_combinedropship.cpp
		hl2/npc_combinegunship.cpp
		hl2/npc_combines.cpp
		hl2/npc_cranedriver.cpp
		hl2/npc_crow.cpp
		hl2/npc_dog.cpp
		hl2/npc_eli.cpp
		hl2/npc_enemyfinder.cpp
		hl2/npc_fastzombie.cpp
		hl2/npc_fisherman.cpp
		hl2/npc_gman.cpp
		hl2/npc_headcrab.cpp
		hl2/npc_ichthyosaur.cpp
		hl2/npc_kleiner.cpp
		hl2/npc_launcher.cpp
		hl2/npc_manhack.cpp
		hl2/npc_metropolice.cpp
		hl2/npc_missiledefense.cpp
		hl2/npc_monk.cpp
		hl2/npc_mossman.cpp
		hl2/npc_playercompanion.cpp
		hl2/npc_PoisonZombie.cpp
		hl2/npc_rollermine.cpp
		hl2/npc_scanner.cpp
		hl2/npc_stalker.cpp
		hl2/npc_strider.cpp
		hl2/npc_turret_ceiling.cpp
		hl2/npc_turret_floor.cpp
		hl2/npc_turret_ground.cpp
		hl2/npc_vortigaunt_episodic.cpp
		hl2/npc_zombie.cpp
		hl2/npc_zombine.cpp
		hl2/point_apc_controller.cpp
		hl2/prop_combine_ball.cpp
		hl2/prop_thumper.cpp
		hl2/proto_sniper.cpp
		hl2/rotorwash.cpp
		hl2/script_intro.cpp
		hl2/vehicle_airboat.cpp
		hl2/vehicle_apc.cpp
		hl2/vehicle_cannon.cpp
		hl2/vehicle_crane.cpp
		hl2/vehicle_jeep.cpp
		hl2/vehicle_prisoner_pod.cpp
		hl2/vehicle_viewcontroller.cpp
		hl2/weapon_357.cpp
		hl2/weapon_alyxgun.cpp
		hl2/weapon_annabelle.cpp
		hl2/weapon_ar2.cpp
		hl2/weapon_bugbait.cpp
		hl2/weapon_cguard.cpp
		hl2/weapon_citizenpackage.cpp
		hl2/weapon_crossbow.cpp
		hl2/weapon_crowbar.cpp
		hl2/weapon_flaregun.cpp
		hl2/weapon_frag.cpp
		hl2/weapon_physcannon.cpp
		hl2/weapon_pistol.cpp
		hl2/weapon_rpg.cpp
		hl2/weapon_shotgun.cpp
		hl2/weapon_smg1.cpp
		logic_achievement.cpp
		monstermaker.cpp
		npc_talker.cpp
		team_spawnpoint.cpp
		vehicle_choreo_generic.cpp
		weapon_cubemap.cpp
	)
else()
	target_sources(server PRIVATE
		$<$<NOT:$<BOOL:${MAPBASE}>>:hl2/weapon_stunstick.cpp> # See server_mapbase.vpc
		${SP_SOURCE_DIR}/game/shared/hl2/achievements_hl2.cpp
		${SP_SOURCE_DIR}/game/shared/hl2/basehlcombatweapon_shared.cpp
		${SP_SOURCE_DIR}/game/shared/hl2/env_headcrabcanister_shared.cpp
		${SP_SOURCE_DIR}/game/shared/hl2/hl2_gamerules.cpp
		${SP_SOURCE_DIR}/game/shared/hl2/hl2_usermessages.cpp
		${SP_SOURCE_DIR}/game/shared/hl2/hl_gamemovement.cpp
		${SP_SOURCE_DIR}/game/shared/hl2/survival_gamerules.cpp
		${SP_SOURCE_DIR}/game/shared/script_intro_shared.cpp
		${SP_SOURCE_DIR}/game/shared/weapon_parse_default.cpp
		ai_eventresponse.cpp
		ai_relationship.cpp
		basebludgeonweapon.cpp
		base_gameinterface.cpp
		basegrenade_concussion.cpp
		basegrenade_contact.cpp
		basegrenade_timed.cpp
		grenadethrown.cpp
		h_cycler.cpp
		hl2/ai_allymanager.cpp
		hl2/ai_behavior_actbusy.cpp
		hl2/ai_behavior_functank.cpp
		hl2/ai_behavior_holster.cpp
		hl2/ai_behavior_operator.cpp
		hl2/ai_behavior_police.cpp
		hl2/ai_goal_police.cpp
		hl2/ai_spotlight.cpp
		hl2/antlion_dust.cpp
		hl2/antlion_maker.cpp
		hl2/ar2_explosion.cpp
		hl2/basehlcombatweapon.cpp
		hl2/cbasehelicopter.cpp
		hl2/cbasespriteprojectile.cpp
		hl2/citadel_effects.cpp
		hl2/combine_mine.cpp
		hl2/env_alyxemp.cpp
		hl2/env_headcrabcanister.cpp
		hl2/env_speaker.cpp
		hl2/env_starfield.cpp
		hl2/Func_Monitor.cpp
		hl2/func_recharge.cpp
		hl2/func_tank.cpp
		hl2/grenade_ar2.cpp
		hl2/grenade_beam.cpp
		hl2/grenade_bugbait.cpp
		hl2/grenade_frag.cpp
		hl2/grenade_homer.cpp
		hl2/grenade_pathfollower.cpp
		hl2/hl2_ai_network.cpp
		hl2/hl2_client.cpp
		hl2/hl2_eventlog.cpp
		hl2/hl2_gamestats.cpp
		hl2/hl2_player.cpp
		hl2/hl2_playerlocaldata.cpp
		hl2/hl2_triggers.cpp
		hl2/hl_playermove.cpp
		hl2/info_darknessmode_lightsource.cpp
		hl2/info_teleporter_countdown.cpp
		hl2/item_ammo.cpp
		hl2/item_battery.cpp
		hl2/item_dynamic_resupply.cpp
		hl2/item_healthkit.cpp
		hl2/item_itemcrate.cpp
		hl2/item_suit.cpp
		hl2/look_door.cpp
		hl2/monster_dummy.cpp
		hl2/npc_alyx.cpp
		hl2/npc_antlion.cpp
		hl2/npc_antlionguard.cpp
		hl2/npc_apcdriver.cpp
		hl2/npc_attackchopper.cpp
		hl2/npc_barnacle.cpp
		hl2/npc_barney.cpp
		hl2/npc_basescanner.cpp
		hl2/npc_BaseZombie.cpp
		hl2/npc_blob.cpp
		hl2/npc_breen.cpp
		hl2/npc_bullseye.cpp
		hl2/npc_citizen17.cpp
		hl2/npc_combinecamera.cpp
		hl2/npc_combine.cpp
		hl2/npc_combinedropship.cpp
		hl2/npc_combinegunship.cpp
		hl2/npc_combines.cpp
		hl2/npc_cranedriver.cpp
		hl2/npc_crow.cpp
		hl2/npc_dog.cpp
		hl2/npc_eli.cpp
		hl2/npc_enemyfinder.cpp
		hl2/npc_fastzombie.cpp
		hl2/npc_fisherman.cpp
		hl2/npc_gman.cpp
		hl2/npc_headcrab.cpp
		hl2/npc_ichthyosaur.cpp
		hl2/npc_kleiner.cpp
		hl2/npc_launcher.cpp
		hl2/npc_manhack.cpp
		hl2/npc_metropolice.cpp
		hl2/npc_missiledefense.cpp
		hl2/npc_monk.cpp
		hl2/npc_mossman.cpp
		hl2/npc_playercompanion.cpp
		hl2/npc_PoisonZombie.cpp
		hl2/npc_rollermine.cpp
		hl2/npc_scanner.cpp
		hl2/npc_stalker.cpp
		hl2/npc_strider.cpp
		hl2/npc_turret_ceiling.cpp
		hl2/npc_turret_floor.cpp
		hl2/npc_turret_ground.cpp
		hl2/npc_vortigaunt_episodic.cpp
		hl2/npc_zombie.cpp
		hl2/point_apc_controller.cpp
		hl2/prop_combine_ball.cpp
		hl2/prop_thumper.cpp
		hl2/proto_sniper.cpp
		hl2/rotorwash.cpp
		hl2/script_intro.cpp
		hl2/vehicle_airboat.cpp
		hl2/vehicle_apc.cpp
		hl2/vehicle_cannon.cpp
		hl2/vehicle_crane.cpp
		hl2/vehicle_jeep.cpp
		hl2/vehicle_prisoner_pod.cpp
		hl2/vehicle_viewcontroller.cpp
		hl2/weapon_357.cpp
		hl2/weapon_alyxgun.cpp
		hl2/weapon_annabelle.cpp
		hl2/weapon_ar2.cpp
		hl2/weapon_bugbait.cpp
		hl2/weapon_cguard.cpp
		hl2/weapon_citizenpackage.cpp
		hl2/weapon_crossbow.cpp
		hl2/weapon_crowbar.cpp
		hl2/weapon_flaregun.cpp
		hl2/weapon_frag.cpp
		hl2/weapon_physcannon.cpp
		hl2/weapon_pistol.cpp
		hl2/weapon_rpg.cpp
		hl2/weapon_shotgun.cpp
		hl2/weapon_smg1.cpp
		logic_achievement.cpp
		monstermaker.cpp
		npc_talker.cpp
		team_spawnpoint.cpp
		vehicle_choreo_generic.cpp
		weapon_cubemap.cpp
	)
endif()

if (MAPBASE)
	target_link_libraries(server PRIVATE
		$<$<BOOL:${MAPBASE_VSCRIPT}>:Lib::VScript>
		$<$<BOOL:${NEW_RESPONSE_SYSTEM}>:Lib::ResponseRules>
	)
	target_compile_options(server PRIVATE ${OPT_EXCEPTIONS_ENABLE})
	target_compile_definitions(server PRIVATE
		ASW_PROJECTED_TEXTURES
		DYNAMIC_RTT_SHADOWS
		GLOWS_ENABLE
	)
	target_sources(server PRIVATE
		$<$<BOOL:${MAPBASE_VSCRIPT}>:${SP_SOURCE_DIR}/game/shared/mapbase/logic_script_client.cpp>
		$<$<BOOL:${MAPBASE_VSCRIPT}>:${SP_SOURCE_DIR}/game/shared/mapbase/vscript_consts_shared.cpp>
		$<$<BOOL:${MAPBASE_VSCRIPT}>:${SP_SOURCE_DIR}/game/shared/mapbase/vscript_consts_weapons.cpp>
		$<$<BOOL:${MAPBASE_VSCRIPT}>:${SP_SOURCE_DIR}/game/shared/mapbase/vscript_funcs_hl2.cpp>
		$<$<BOOL:${MAPBASE_VSCRIPT}>:${SP_SOURCE_DIR}/game/shared/mapbase/vscript_funcs_shared.cpp>
		$<$<BOOL:${MAPBASE_VSCRIPT}>:${SP_SOURCE_DIR}/game/shared/mapbase/vscript_singletons.cpp>
		$<$<BOOL:${MAPBASE_VSCRIPT}>:${SP_SOURCE_DIR}/game/shared/mapbase/weapon_custom_scripted.cpp>
		$<$<BOOL:${NEW_RESPONSE_SYSTEM}>:ai_expresserfollowup.cpp>
		$<$<BOOL:${NEW_RESPONSE_SYSTEM}>:ai_speechqueue.cpp>
		${SP_SOURCE_DIR}/game/shared/hl2mp/weapon_slam.cpp
		${SP_SOURCE_DIR}/game/shared/hl2mp/weapon_stunstick.cpp
		${SP_SOURCE_DIR}/game/shared/mapbase/mapbase_game_log.cpp
		${SP_SOURCE_DIR}/game/shared/mapbase/mapbase_rpc.cpp
		${SP_SOURCE_DIR}/game/shared/mapbase/mapbase_shared.cpp
		${SP_SOURCE_DIR}/game/shared/mapbase/mapbase_usermessages.cpp
		${SP_SOURCE_DIR}/game/shared/mapbase/MapEdit.cpp
		${SP_SOURCE_DIR}/game/shared/mapbase/matchers.cpp
		${SP_SOURCE_DIR}/game/shared/mapbase/singleplayer_animstate.cpp
		env_dof_controller.cpp
		env_global_light.cpp
		env_instructor_hint.cpp
		fogvolume.cpp
		hl2mp/grenade_satchel.cpp
		hl2mp/grenade_tripmine.cpp
		logic_playmovie.cpp
		logic_random_outputs.cpp
		mapbase/ai_grenade.cpp
		mapbase/ai_monitor.cpp
		mapbase/ai_weaponmodifier.cpp
		mapbase/closecaption_entity.cpp
		mapbase/datadesc_mod.cpp
		mapbase/func_clientclip.cpp
		mapbase/func_fake_worldportal.cpp
		mapbase/GlobalStrings.cpp
		mapbase/logic_eventlistener.cpp
		mapbase/logic_externaldata.cpp
		mapbase/logic_register_activator.cpp
		mapbase/logic_skill.cpp
		mapbase/logic_substring.cpp
		mapbase/point_advanced_finder.cpp
		mapbase/point_copy_size.cpp
		mapbase/point_damageinfo.cpp
		mapbase/point_entity_replace.cpp
		mapbase/point_glow.cpp
		#mapbase/point_physics_control.cpp // Backlogged
		mapbase/point_projectile.cpp
		mapbase/point_radiation_source.cpp
		mapbase/SystemConvarMod.cpp
		mapbase/vgui_text_display.cpp
		movie_display.cpp
		point_entity_finder.cpp
		postprocesscontroller.cpp
		skyboxswapper.cpp	
	)
endif()

target_compile_definitions(server PRIVATE
	USE_NAV_MESH
)
target_sources(server PRIVATE
	nav_area.cpp
	nav_colors.cpp
	nav_edit.cpp
	nav_entities.cpp
	nav_file.cpp
	nav_generate.cpp
	nav_ladder.cpp
	nav_merge.cpp
	nav_mesh.cpp
	nav_mesh_factory.cpp
	nav_node.cpp
	nav_simplify.cpp
)
target_sources(server PRIVATE FILE_SET private TYPE HEADERS FILES
	nav.h
	nav_area.h
	nav_colors.h
	nav_entities.h
	nav_ladder.h
	nav_mesh.h
	nav_node.h
	nav_pathfind.h
)
